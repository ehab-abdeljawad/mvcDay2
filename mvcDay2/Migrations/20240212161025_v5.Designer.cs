// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvcDay2.Models;

#nullable disable

namespace mvcDay2.Migrations
{
    [DbContext(typeof(banhacontext))]
    [Migration("20240212161025_v5")]
    partial class v5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mvcDay2.Models.Departments", b =>
                {
                    b.Property<int>("Dnum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dnum"));

                    b.Property<string>("Dname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Mgssn")
                        .HasColumnType("int");

                    b.HasKey("Dnum");

                    b.HasIndex("Mgssn")
                        .IsUnique()
                        .HasFilter("[Mgssn] IS NOT NULL");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("mvcDay2.Models.Dependent", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("eSsn")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Bdate")
                        .HasColumnType("date");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("name", "eSsn");

                    b.HasIndex("eSsn");

                    b.ToTable("dependents");
                });

            modelBuilder.Entity("mvcDay2.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Dno")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dno");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("mvcDay2.Models.Work_for", b =>
                {
                    b.Property<int?>("eSsn")
                        .HasColumnType("int");

                    b.Property<int?>("pno")
                        .HasColumnType("int");

                    b.Property<int>("Houres")
                        .HasColumnType("int");

                    b.HasKey("eSsn", "pno");

                    b.HasIndex("pno");

                    b.ToTable("work_Fors");
                });

            modelBuilder.Entity("mvcDay2.Models.employee", b =>
                {
                    b.Property<int>("Ssn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ssn"));

                    b.Property<DateOnly>("Bdate")
                        .HasColumnType("date");

                    b.Property<int?>("Dno")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("salary")
                        .HasColumnType("money");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("superid")
                        .HasColumnType("int");

                    b.HasKey("Ssn");

                    b.HasIndex("Dno");

                    b.HasIndex("superid");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("mvcDay2.Models.Departments", b =>
                {
                    b.HasOne("mvcDay2.Models.employee", "mangeemp")
                        .WithOne("mangedept")
                        .HasForeignKey("mvcDay2.Models.Departments", "Mgssn");

                    b.Navigation("mangeemp");
                });

            modelBuilder.Entity("mvcDay2.Models.Dependent", b =>
                {
                    b.HasOne("mvcDay2.Models.employee", "employee")
                        .WithMany("dependents")
                        .HasForeignKey("eSsn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("mvcDay2.Models.Project", b =>
                {
                    b.HasOne("mvcDay2.Models.Departments", "Departments")
                        .WithMany("projects")
                        .HasForeignKey("Dno");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("mvcDay2.Models.Work_for", b =>
                {
                    b.HasOne("mvcDay2.Models.employee", "employee")
                        .WithMany("project")
                        .HasForeignKey("eSsn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvcDay2.Models.Project", "Project")
                        .WithMany("employees")
                        .HasForeignKey("pno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("mvcDay2.Models.employee", b =>
                {
                    b.HasOne("mvcDay2.Models.Departments", "Departments")
                        .WithMany("employees")
                        .HasForeignKey("Dno");

                    b.HasOne("mvcDay2.Models.employee", "superssn")
                        .WithMany("group")
                        .HasForeignKey("superid");

                    b.Navigation("Departments");

                    b.Navigation("superssn");
                });

            modelBuilder.Entity("mvcDay2.Models.Departments", b =>
                {
                    b.Navigation("employees");

                    b.Navigation("projects");
                });

            modelBuilder.Entity("mvcDay2.Models.Project", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("mvcDay2.Models.employee", b =>
                {
                    b.Navigation("dependents");

                    b.Navigation("group");

                    b.Navigation("mangedept")
                        .IsRequired();

                    b.Navigation("project");
                });
#pragma warning restore 612, 618
        }
    }
}
